openapi: 3.0.0
info:
  title: Simple Am@ API
  description: This is a simple API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/jlemesh/am-at/1.0.0
  description: SwaggerHub API Auto Mocking
tags:
- name: users
  description: Operations reated to users
paths:
  /users:
    get:
      tags:
      - users
      summary: get all users
      description: |
        Get list of users
      operationId: get_users
      parameters:
      - name: skip
        in: query
        description: number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      - name: name
        in: query
        description: user name
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
                x-content-type: application/json
        "400":
          description: bad input parameter
      x-openapi-router-controller: swagger_server.controllers.users_controller
    post:
      tags:
      - users
      summary: adds a user
      description: Adds user to the system
      operationId: add_user
      requestBody:
        description: User to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "201":
          description: item created
        "400":
          description: "invalid input, object invalid"
        "409":
          description: an existing item already exists
      x-openapi-router-controller: swagger_server.controllers.users_controller
  /users/{id}:
    get:
      tags:
      - users
      summary: returns user info
      description: |
        Get user info
      operationId: get_user
      parameters:
      - name: id
        in: path
        description: user id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: user info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: bad input parameter
        "404":
          description: item not found
      x-openapi-router-controller: swagger_server.controllers.users_controller
    patch:
      tags:
      - users
      summary: updates user info
      description: |
        Update user info
      operationId: update_user
      parameters:
      - name: id
        in: path
        description: user id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: User to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "200":
          description: updated user info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: bad input parameter
        "404":
          description: item not found
      x-openapi-router-controller: swagger_server.controllers.users_controller
  /users/{id}/friends:
    get:
      tags:
      - users
      summary: returns user friends
      description: |
        Get user friends
      operationId: get_user_friends
      parameters:
      - name: id
        in: path
        description: user id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: query
        description: friend name
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: user friends
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
                x-content-type: application/json
        "400":
          description: bad input parameter
        "404":
          description: item not found
      x-openapi-router-controller: swagger_server.controllers.users_controller
    post:
      tags:
      - users
      summary: adds a friend
      description: Become user's friend
      operationId: add_friend
      parameters:
      - name: id
        in: path
        description: user id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: item created
        "400":
          description: "invalid input, object invalid"
        "409":
          description: item already exists
      x-openapi-router-controller: swagger_server.controllers.users_controller
  /users/{id}/friends/{friendId}:
    delete:
      tags:
      - users
      summary: delete a user friend
      description: Unfriend
      operationId: delete_friend
      parameters:
      - name: id
        in: path
        description: user id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: friendId
        in: path
        description: friend id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: item deleted
        "400":
          description: "invalid input, object invalid"
        "404":
          description: item not found
      x-openapi-router-controller: swagger_server.controllers.users_controller
  /groups:
    get:
      tags:
      - groups
      summary: returns user friend groups
      description: |
        Get user groups
      operationId: get_groups
      parameters:
      - name: name
        in: query
        description: group name
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: user groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
                x-content-type: application/json
        "400":
          description: bad input parameter
        "404":
          description: item not found
      x-openapi-router-controller: swagger_server.controllers.groups_controller
    post:
      tags:
      - groups
      summary: adds a group
      description: Add friends group
      operationId: add_groups
      requestBody:
        description: Group to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        "201":
          description: item created
        "400":
          description: "invalid input, object invalid"
        "409":
          description: item already exists
      x-openapi-router-controller: swagger_server.controllers.groups_controller
  /groups/{id}:
    get:
      tags:
      - groups
      summary: returns user friend group info
      description: |
        Get user group info
      operationId: get_group
      parameters:
      - name: id
        in: path
        description: group id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: group info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        "400":
          description: bad input parameter
        "404":
          description: item not found
      x-openapi-router-controller: swagger_server.controllers.groups_controller
    delete:
      tags:
      - groups
      summary: delete a group
      description: Delete group
      operationId: delete_group
      parameters:
      - name: id
        in: path
        description: group id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: item deleted
        "400":
          description: "invalid input, object invalid"
        "404":
          description: item not found
      x-openapi-router-controller: swagger_server.controllers.groups_controller
  /groups/{id}/members:
    get:
      tags:
      - groups
      summary: returns user friend group members
      description: |
        Get user group members
      operationId: get_group_members
      parameters:
      - name: id
        in: path
        description: group id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: group info
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
                x-content-type: application/json
        "400":
          description: bad input parameter
        "404":
          description: item not found
      x-openapi-router-controller: swagger_server.controllers.groups_controller
    post:
      tags:
      - groups
      summary: adds a group member
      description: Add friends group member
      operationId: add_group_member
      parameters:
      - name: id
        in: path
        description: group id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: User to add to a group (ID)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/id_members_body'
      responses:
        "201":
          description: item created
        "400":
          description: "invalid input, object invalid"
        "409":
          description: item already exists
      x-openapi-router-controller: swagger_server.controllers.groups_controller
  /groups/{id}/members/{memberId}:
    delete:
      tags:
      - groups
      summary: delete member from a group
      description: Delete group member
      operationId: delete_group_member
      parameters:
      - name: id
        in: path
        description: group id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: memberId
        in: path
        description: member id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: item deleted
        "400":
          description: "invalid input, object invalid"
        "404":
          description: item not found
      x-openapi-router-controller: swagger_server.controllers.groups_controller
components:
  schemas:
    User:
      required:
      - email
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Viktorija V.
        email:
          type: string
          format: email
          example: vosyliute@gmail.com
        photo_url:
          type: string
          format: url
          example: https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1868&q=80
        status:
          type: string
          example: "Free on Friday, busy next week"
      description: Application user
      example:
        name: Viktorija V.
        id: 1
        photo_url: https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1868&q=80
        email: vosyliute@gmail.com
        status: "Free on Friday, busy next week"
    Group:
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Close friends
        photo_url:
          type: string
          format: url
          example: https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1868&q=80
      description: Friends' group
      example:
        name: Close friends
        id: 1
        photo_url: https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1868&q=80
    id_members_body:
      required:
      - id
      type: object
      properties:
        id:
          type: integer

